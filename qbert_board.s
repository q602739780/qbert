	AREA board, CODE, READWRITE
	EXPORT copy_board
	EXPORT Display_board
	EXPORT board_array
	EXPORT board_array_initial
	IMPORT Display_Score
	IMPORT Display_Time
	IMPORT output_string
	IMPORT output_character
	IMPORT div_and_mod
	IMPORT Pause
	IMPORT Score
	IMPORT Time

prompt = "Welcome to Game Q'bert\n\r",0
message1 = "Press G to start the program\n\r", 0
message2 = "Keystrokes\n\r w - move up \n\r s - move down \n\r a - move left \n\r d - move right \n\r Press Push Button to display random character ( *, @ , X, + ) ", 0

board_array 
	DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090700, 0x09090707, 0x09090707, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000 ; 1
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090201, 0x09090300, 0x09090800, 0x09090002, 0x09090000, 0x09090000, 0x09090000, 0x09090000 ; 2
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090700, 0x09090707, 0x09090707, 0x09090001, 0x09090702, 0x09090707, 0x09090207, 0x09090000, 0x09090000, 0x09090000, 0x09090000 ; 3
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090201, 0x09090000, 0x09090800, 0x09090002, 0x09090001, 0x09090000, 0x09090100, 0x09090000, 0x09090000, 0x09090000, 0x09090000 ; 4
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090700, 0x09090707, 0x09090707, 0x09090001, 0x09090702, 0x09090707, 0x09090207, 0x09090701, 0x09090707, 0x09090107, 0x09090000, 0x09090000, 0x09090000, 0x09090000 ; 5
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090201, 0x09090000, 0x09090800, 0x09090002, 0x09090001, 0x09090000, 0x09090100, 0x09090002, 0x09090000, 0x09090208, 0x09090000, 0x09090000, 0x09090000, 0x09090000 ; 6
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090700, 0x09090707, 0x09090707, 0x09090001, 0x09090702, 0x09090707, 0x09090207, 0x09090701, 0x09090707, 0x09090107, 0x09090200, 0x09090707, 0x09090707, 0x09090002, 0x09090000, 0x09090000, 0x09090000 ; 7
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090201, 0x09090000, 0x09090800, 0x09090002, 0x09090001, 0x09090000, 0x09090100, 0x09090002, 0x09090000, 0x09090208, 0x09090100, 0x09090000, 0x09090000, 0x09090001, 0x09090000, 0x09090000, 0x09090000 ; 8
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090700, 0x09090707, 0x09090707, 0x09090001, 0x09090702, 0x09090707, 0x09090207, 0x09090701, 0x09090707, 0x09090107, 0x09090200, 0x09090707, 0x09090707, 0x09090102, 0x09090707, 0x09090707, 0x09090001, 0x09090000, 0x09090000, 0x09090000 ; 9
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090201, 0x09090000, 0x09090800, 0x09090002, 0x09090001, 0x09090000, 0x09090100, 0x09090002, 0x09090000, 0x09090208, 0x09090100, 0x09090000, 0x09090000, 0x09090201, 0x09090000, 0x09090800, 0x09090002, 0x09090000, 0x09090000, 0x09090000 ; 10
    DCD  0x09090700, 0x09090707, 0x09090707, 0x09090001, 0x09090702, 0x09090707, 0x09090207, 0x09090701, 0x09090707, 0x09090107, 0x09090200, 0x09090707, 0x09090707, 0x09090102, 0x09090707, 0x09090707, 0x09090001, 0x09090702, 0x09090707, 0x09090207, 0x09090000, 0x09090000, 0x09090000 ; 11
    DCD  0x09090201, 0x09090000, 0x09090800, 0x09090002, 0x09090001, 0x09090000, 0x09090100, 0x09090002, 0x09090000, 0x09090208, 0x09090100, 0x09090000, 0x09090000, 0x09090201, 0x09090000, 0x09090800, 0x09090002, 0x09090001, 0x09090000, 0x09090100, 0x09090000, 0x09090000, 0x09090000 ; 12
    DCD  0x09090001, 0x09090702, 0x09090707, 0x09090207, 0x09090701, 0x09090707, 0x09090107, 0x09090200, 0x09090707, 0x09090707, 0x09090102, 0x09090707, 0x09090707, 0x09090001, 0x09090702, 0x09090707, 0x09090207, 0x09090701, 0x09090707, 0x09090107, 0x09090000, 0x09090000, 0x09090000 ; 13
    DCD  0x09090002, 0x09090001, 0x09090000, 0x09090100, 0x09090002, 0x09090000, 0x09090208, 0x09090100, 0x09090000, 0x09090000, 0x09090201, 0x09090000, 0x09090800, 0x09090002, 0x09090001, 0x09090000, 0x09090100, 0x09090002, 0x09090000, 0x09090208, 0x09090000, 0x09090000, 0x09090000 ; 14
    DCD  0x09090200, 0x09090701, 0x09090707, 0x09090107, 0x09090200, 0x09090707, 0x09090707, 0x09090102, 0x09090707, 0x09090707, 0x09090001, 0x09090702, 0x09090707, 0x09090207, 0x09090701, 0x09090707, 0x09090107, 0x09090200, 0x09090707, 0x09090707, 0x09090002, 0x09090000, 0x09090000 ; 15
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090200, 0x09090100, 0x09090000, 0x09090000, 0x09090201, 0x09090000, 0x09090800, 0x09090002, 0x09090001, 0x09090000, 0x09090100, 0x09090002, 0x09090000, 0x09090208, 0x09090100, 0x09090000, 0x09090000, 0x09090001, 0x09090000, 0x09090000 ; 16
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090102, 0x09090707, 0x09090707, 0x09090001, 0x09090702, 0x09090707, 0x09090207, 0x09090701, 0x09090707, 0x09090107, 0x09090200, 0x09090707, 0x09090707, 0x09090102, 0x09090707, 0x09090707, 0x09090001, 0x09090000, 0x09090000 ; 17
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090002, 0x09090001, 0x09090000, 0x09090100, 0x09090002, 0x09090000, 0x09090208, 0x09090100, 0x09090000, 0x09090000, 0x09090201, 0x09090000, 0x09090800, 0x09090002, 0x09090000, 0x09090000 ; 18
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090200, 0x09090701, 0x09090707, 0x09090107, 0x09090200, 0x09090707, 0x09090707, 0x09090102, 0x09090707, 0x09090707, 0x09090001, 0x09090702, 0x09090707, 0x09090207, 0x09090000, 0x09090000 ; 19
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090200, 0x09090100, 0x09090000, 0x09090000, 0x09090201, 0x09090000, 0x09090800, 0x09090002, 0x09090001, 0x09090000, 0x09090100, 0x09090000, 0x09090000 ; 20
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090102, 0x09090707, 0x09090707, 0x09090001, 0x09090702, 0x09090707, 0x09090207, 0x09090701, 0x09090707, 0x09090107, 0x09090000, 0x09090000 ; 21
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090002, 0x09090001, 0x09090000, 0x09090100, 0x09090002, 0x09090000, 0x09090208, 0x09090000, 0x09090000 ; 22
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090200, 0x09090701, 0x09090707, 0x09090107, 0x09090200, 0x09090707, 0x09090707, 0x09090002, 0x09090000 ; 23
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090200, 0x09090100, 0x09090000, 0x09090000, 0x09090001, 0x09090000 ; 24
    DCD  0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090000, 0x09090102, 0x09090707, 0x09090707, 0x09090001, 0x09090000 ; 25

board_array_initial ; 575 Words
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    DCD 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    

Status 																						 
    DCD Empty, pipe, slash, qbert, enemy_a, enemy_b, enemy_snake, underscore, star, unused, Empty ; 0-9  
Title           = "Qbert \n\r", 0
Time_S          = "Time : ", 0
Score_S         = "                 Score : ", 0
Score_S_Paused  = "                 Score :                  PAUSED", 0
Empty           = " ", 0
pipe            = "|", 0
slash           = "/", 0
qbert           = "Q", 0
enemy_a         = "O", 0
enemy_b         = "C", 0
enemy_snake     = "S", 0
underscore      = "_", 0
star            = "*", 0
unused			= "", 0
new_line        = "\n\r", 0
	ALIGN
 
copy_board
        ; This function replaces the contents (575 words) in r4 with the contents in r5
		; Two arguments are needed in r4 and r5 as the base address of Board_array
	MOV r0, #255
	ADD r0, r0, #255
	ADD r0, r0, #65
loop_copy
    LDR r1, [r4], #4     ; Load a word from the address of r4
    STR r1, [r5], #4     ; Store that word in address of r5
    SUBS r0, r0, #1      ; Decrement words
    BNE loop_copy
    BX lr
    
Display_board
		; This function prints out the game board based on the info in Board_array
		; No argument is needed
	STMFD sp!, {r4-r7, lr}
	MOV r0, #0x0C					; New page
	BL output_character
	LDR r4, =Title					; Print title, time and score
	BL output_string
	LDR r4, =Time_S
	BL output_string
	BL Display_Time
	LDR r4, =Pause					; Print one of the two versions of "Score_S" based on whether
	LDR r0, [r4]					; the game is paused
	CMP r0, #0
	LDREQ r4, =Score_S
	LDRNE r4, =Score_S_Paused
	BL output_string
	BL Display_Score
	
	MOV r7, #-92 					; The base offset used to calculate effective offset
	MOV r0, #-1						; r0 = Y-coordinate counter
	LDR r5, =board_array
	LDR r6, =Status
loop_board_1
	LDR r4, =new_line				; New line
	STMFD sp!, {r0}
	BL output_string
	LDMFD sp!, {r0}
	ADD r0, r0, #1					; Increment y-counter(next line) and reset x-counter (to 88) when a line is done
	CMP r0, #25						; Done after 23 lines are done
	BEQ quit_board
	MOV r1, #88						; r1 = X-coordinate counter
	ADD r7, r7, #92					
loop_board_2
	ADD r3, r7, r1					; Corresponding offset for that coordinates
	LDRB r2, [r5, r3]		; Use that offset to get info from Board_array
	LDR r4, [r6, r2, LSL #2]		        ; Use that info to get string from Status and print it out
	STMFD sp!, {r0, r1}
	BL output_string
	LDMFD sp!, {r0, r1}
	SUBS r1, r1, #1					; Next coordinate
	BLT loop_board_1
	B loop_board_2
quit_board
	LDMFD sp!, {r4-r7, lr}
	BX lr

	END